services:
  nginx-proxy:
    image: jwilder/nginx-proxy:1.5
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - certs:/etc/nginx/certs:ro
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - type: bind
        source: ./missoula_proxy.conf
        target: /etc/nginx/vhost.d/$VIRTUAL_HOST_A
      - type: bind
        source: ./missoula_proxy.conf
        target: /etc/nginx/vhost.d/$VIRTUAL_HOST_B
    restart: always
    labels:
      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: true
  acme-companion:
    image: nginxproxy/acme-companion:2.2.10
    environment:
      DEFAULT_EMAIL: $DEFAULT_EMAIL
      LETSENCRYPT_HOST: $VIRTUAL_HOST
      LETSENCRYPT_EMAIL: $DEFAULT_EMAIL
    volumes:
      - certs:/etc/nginx/certs:rw
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - acme:/etc/acme.sh
    restart: always
    depends_on:
      - nginx-proxy
  hazardready:
    build: ../hazard-ready.github.io
    restart: always
    environment:
      - VIRTUAL_HOST=$VIRTUAL_HOST
      - VIRTUAL_PORT=80
      - VIRTUAL_PATH=/
    image: hazardready:${VERSION}
    expose:
      - "80"
    depends_on:
      - init
      - nginx-proxy
      - acme-companion
      - postgres
  seattle:
    build: ../seattle-ready
    restart: always
    environment:
      - DJANGO_SECRET_KEY=$DJANGO_SECRET_KEY_SEATTLE
      - DATABASE_URL=$DATABASE_URL_SEATTLE
      - VIRTUAL_HOST=$VIRTUAL_HOST
      - VIRTUAL_PORT=8000
      - VIRTUAL_PATH=$VIRTUAL_PATH_SEATTLE
      - VIRTUAL_DEST=/
      - LETSENCRYPT_HOST=$VIRTUAL_HOST
      - LETSENCRYPT_EMAIL=$DEFAULT_EMAIL
      - EMAIL_HOST=$EMAIL_HOST
      - EMAIL_HOST_USER=$EMAIL_HOST_USER
      - EMAIL_HOST_PASSWORD=$EMAIL_HOST_PASSWORD
    image: seattle-ready:${VERSION}
    expose:
     - "8000"
    depends_on:
      - init
      - postgres
  pdx:
    build: ../pdx-ready
    image: pdx-ready:${VERSION}
    restart: always
    environment:
      - DJANGO_SECRET_KEY=$DJANGO_SECRET_KEY_PDX
      - DATABASE_URL=$DATABASE_URL_PDX
      - VIRTUAL_HOST=$VIRTUAL_HOST
      - VIRTUAL_PORT=8000
      - VIRTUAL_PATH=$VIRTUAL_PATH_PORTLAND
      - VIRTUAL_DEST=/
      - LETSENCRYPT_HOST=$VIRTUAL_HOST
      - LETSENCRYPT_EMAIL=$DEFAULT_EMAIL
      - EMAIL_HOST=$EMAIL_HOST
      - EMAIL_HOST_USER=$EMAIL_HOST_USER
      - EMAIL_HOST_PASSWORD=$EMAIL_HOST_PASSWORD
    expose:
     - "8000"
    depends_on:
      - init
      - postgres
  montana:
    build: ../missoula-ready
    restart: always
    environment:
      - DJANGO_SECRET_KEY=$DJANGO_SECRET_KEY_MONTANA
      - DATABASE_URL=$DATABASE_URL_MONTANA
      - VIRTUAL_HOST=$VIRTUAL_HOST
      - VIRTUAL_PORT=8000
      - VIRTUAL_PATH=$VIRTUAL_PATH_MONTANA
      - VIRTUAL_DEST=/
      - LETSENCRYPT_HOST=$VIRTUAL_HOST
      - LETSENCRYPT_EMAIL=$DEFAULT_EMAIL
      - EMAIL_HOST=$EMAIL_HOST
      - EMAIL_HOST_USER=$EMAIL_HOST_USER
      - EMAIL_HOST_PASSWORD=$EMAIL_HOST_PASSWORD
    image: missoula-ready:${VERSION}
    expose:
     - "8000"
    depends_on:
      - init
      - postgres
  init:
    build:
      context: .
    environment:
      DJANGO_SECRET_KEY: $DJANGO_SECRET_KEY
      DATABASE_URL: $DATABASE_URL
    image: disaster-preparedness:${VERSION}
    depends_on:
      - postgres
  postgres:
    build:
      context: .
      dockerfile: Dockerfile-postgres
    image: hazardready-postgres:${VERSION}
    volumes:
    - postgres_db_data_volume_01:/var/lib/postgresql/data
    restart: always
    environment:
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD

volumes:
  postgres_db_data_volume_01: {}
  certs: {}
  vhost: {}
  html: {}
  acme: {}

